/*
 * Copyright (c) 2005, 2014, EVECOM Technology Co.,Ltd. All rights reserved.
 * EVECOM PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 * 
 */
package net.evecom.androidecssp.base;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;

import net.evecom.androidecssp.R;
import net.evecom.androidecssp.util.FileUtils;
import android.annotation.SuppressLint;
import android.content.ContentValues;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.provider.MediaStore.Video.Media;
import android.view.KeyEvent;
import android.view.View;
import android.widget.ImageView;
import android.widget.Toast;

/**
 * 
 * 2014-7-22下午6:04:23 类UploadPictureActivity
 * 
 * @author Mars zhang
 * 
 */
public class UploadPictureActivity extends BaseActivity {
    /** 成员变量 */
    private Uri photoUri;
    /** 成员变量 */
    private ImageView imageView;

    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.uploadpictrue);
        initView();
    }

    public void initView() {
        // 图片视图
        imageView = (ImageView) findViewById(R.id.uploadpicture_cameraImage);
        SharedPreferences sp = getApplicationContext().getSharedPreferences("Picture", MODE_PRIVATE);
        // 存入数据
        Editor editor = sp.edit();
        editor.putString("fileName", "");
        editor.commit();
    }

    /**
     * 获取文件路径并上传至服务器
     * 
     * @param v
     */
    public void uploadpicture_up_btn(View v) {
        SharedPreferences sp = getApplicationContext().getSharedPreferences("Picture", MODE_PRIVATE);
        String path = sp.getString("fileName", "none");
        // Toast.makeText(getApplicationContext(), path, 0).show();
        // Intent intent = new Intent(UploadPictureActivity.this,
        // EventAddActivity.class);
        Intent intent = new Intent();
        intent.putExtra("filePath", path);
        setResult(R.layout.uploadpictrue, intent);
        finish();
    }

    /**
     * 相机按钮监听
     * 
     * @param v
     */
    public void uploadpicture_take_btn(View v) {
        cameraMethod();// 拍照
    }

    /**
     * 本地选择按钮监听
     * 
     * @param v
     */
    public void uploadpicture_pick_btn(View v) {
        Intent intent2 = new Intent(Intent.ACTION_GET_CONTENT);
        intent2.setType("*/*");
        intent2.addCategory(Intent.CATEGORY_OPENABLE);
        startActivityForResult(Intent.createChooser(intent2, "请选择一个文件"), 2);
    }

    /**
     * fh
     * 
     * @param v
     */
    public void fh(View v) {
        System.out.println(isdisable);
        if(isdisable)return;
        Intent intent = new Intent(); 
        intent.putExtra("filePath", "none");
        setResult(R.layout.uploadpictrue, intent);
        finish();
    }



    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) { // 点击手机返回按钮时操作
        if (keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {
        	Intent intent = new Intent(); 
            intent.putExtra("filePath", "none");
            setResult(R.layout.uploadpictrue, intent);
            finish();
            return true;
        }
        return false;
    }

    /**
     * 照相功能
     */
    private void cameraMethod() {
        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        SimpleDateFormat timeStampFormat = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");
        String filename = timeStampFormat.format(new Date());
        ContentValues values = new ContentValues();
        values.put(Media.TITLE, filename);
        photoUri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);
        intent.putExtra(MediaStore.EXTRA_OUTPUT, photoUri);
        startActivityForResult(intent, 1);
    }

    @SuppressLint("NewApi")
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        switch (requestCode) {
            case 1: // 从拍照跳转回来
                if (resultCode == RESULT_OK) {
                    String fPath = getRealPathFromURI(photoUri);  
                    System.out.println(fPath);
                    SharedPreferences sp = getApplicationContext().getSharedPreferences("Picture", MODE_PRIVATE);
                    // 存入数据
                    Editor editor = sp.edit();
                    editor.putString("fileName", fPath);
                    editor.commit(); 
//                    imageView.setImageURI(photoUri);
                    displayImage(imageView, fPath);
                }
                break;

            case 2: // 从本地选择器跳转回来
                if (resultCode == RESULT_OK) {
                    Uri uri = data.getData();
                    String path = FileUtils.getPath(this, uri);
                    if (!isImageFile(path)) {
                        Toast.makeText(this, "您选择的不是图片，请选择一个图片", 1).show();
                        return;
                    } else {
                        int xm = 10;
                        File file = new File(path);
                        long fileLength = file.length();
                        if (null != file && fileLength / (1024 * 1024) > xm) {
                            Toast.makeText(this, "您选择的图片文件超过10M,请重新选择图片文件", 1).show();
                            file = null;
                            return;
                        }
                        file = null;
                    }
                    SharedPreferences sp = getApplicationContext().getSharedPreferences("Picture", MODE_PRIVATE);
                    // 存入数据
                    Editor editor = sp.edit();
                    editor.putString("fileName", path);
                    editor.commit();
                    displayImage(imageView, path);
                }

                break;
            default:
                break;
        }
        super.onActivityResult(requestCode, resultCode, data);
    }

    /**
     * 2014-4-1 判断文件路径是否为"jpg","png","gif","jpeg"后缀
     * 
     * @param filePath
     *            文件路径
     * @return Boolean 是否为图片路径
     */
    private Boolean isImageFile(String filePath) {
        String[] imageFormatSet = new String[] { "jpg", "png", "gif", "peg" };
        String endPath = filePath.substring(filePath.length() - 3, filePath.length());
        // System.out.println(endPath);
        for (String item : imageFormatSet) {
            if (endPath.equals(item)) {
                return true;
            }
        }
        return false;
    }

    /** 把Uri转化成文件路径   --过时*/
    private String uri2filePath(Uri uri) {
        String[] proj = { MediaStore.Images.Media.DATA };
        Cursor cursor = managedQuery(uri, proj, null, null, null);
        int index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
        cursor.moveToFirst();
        String path = cursor.getString(index); 
        return path;
    }
    /** 把Uri转化成文件路径 */
    public String getRealPathFromURI(Uri contentUri) {
        String res = null;
        String[] proj = { MediaStore.Images.Media.DATA };
        Cursor cursor = getContentResolver().query(contentUri, proj, null, null, null);
        if(cursor.moveToFirst()){;
         int column_index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
         res = cursor.getString(column_index);
        }
        cursor.close();
        return res;
       }

     

     
}
